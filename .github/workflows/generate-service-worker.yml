name: Generate service-worker
on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    # every hour
    - cron:  '0 * * * *'
permissions:
  contents: write
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          path: service-worker

      - name: Extract files from Docker image
        working-directory: ${{ github.workspace }}/service-worker
        run: |
          docker pull earthfast/service-worker:v0.14.0
          mkdir -p build
          docker create --name temp_container earthfast/service-worker:v0.14.0 /bin/true
          # Extract main.js.tmpl and rename it to earthfast-sw.js
          docker cp temp_container:/earthfast-sw/dist/templates/main.js.tmpl build/earthfast-sw.js
          # Extract index.html from public folder
          docker cp temp_container:/earthfast-sw/dist/public/index.html build/

          # Extract earthfast folder from public folder
          docker cp temp_container:/earthfast-sw/dist/public/earthfast build/
          docker rm temp_container

      - name: Fetch latest content nodes for project
        id: fetch_eth_content_node_data
        run: |
          content_nodes=$(npx earthfast-cli@0.10.2 reservation list ${{ vars.PROJECT_ID }} --network testnet-sepolia --json | jq 'map(.host) | join (",")')
          echo "content_nodes=$content_nodes" >> $GITHUB_OUTPUT
          echo $content_nodes "content_nodes"

      - name: Update build assets
        working-directory: ${{ github.workspace }}/service-worker
        run: |
          sed -i "s/{{.ContentNodes}}/${{ steps.fetch_eth_content_node_data.outputs.content_nodes }}/g" build/earthfast-sw.js
          sed -i "s/{{.BootstrapNodes}}//g" build/earthfast-sw.js
          sed -i "s/{{.ProjectID}}/${{ vars.PROJECT_ID }}/g" build/earthfast-sw.js

      - name: Publish built assets to GitHub
        working-directory: ${{ github.workspace }}/service-worker
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update build assets via GitHub Actions"
            # Pull with rebase
            git pull --rebase origin main
            # Push changes
            git push origin main
          fi
